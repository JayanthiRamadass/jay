{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.1",
    "parameters":{
      "redisCacheName":{
         "type":"string",
         "metadata":{
            "description":"The name of the Azure Redis Cache to create."
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"The location of the Redis Cache. For best performance, use the same location as the app to be used with the cache."
         }
      },
      "enablenontlsaccessonly":{
         "type":"bool",
         "defaultValue":true,
         "metadata":{
            "description":"Set to true to allow access to redis on port 6379, without SSL tunneling (less secure)."
         }
      },
      "capacity":{
         "type":"int",
         "allowedValues":[
            1,
            2,
            3,
            4
         ],
         "defaultValue":2,
         "metadata":{
            "description":"The size of the new Azure Redis Cache instance. Valid family and capacity combinations are (C0..C6, P1..P4)."
         }
      },
      "zones":{
         "type":"array",
         "defaultValue":[
            "1",
            "2",
            "3"
         ],
         "metadata":{
            "description":"The availability zone to implement the cluster for redundance"
         }
      },
 
      "modules":{
         "type":"string",
         "allowedValues":[
            "RediSearch",
            "RedisBloom",
            "RedisTimeSeries"
         ],
         "defaultValue": "RediSearch",
         "metadata":{
            "description":"The redis cache module to select"
         }
      },
      "skuname":{
         "type":"string",
         "metadata":{
            "description":"The size of the new Azure Redis Cache instance. Valid family and capacity combinations are (C0..C6, P1..P4)."
         }
      },
      "minimumTlsVersion":{
         "type":"string",
         "allowedValues":[
            "1.2",
            "1.1",
            "1.0"
         ],
         "defaultValue":"1.2",
         "metadata":{
            "description":"The size of the new Azure Redis Cache instance. Valid family and capacity combinations are (C0..C6, P1..P4)."
         }
      },
 
      "rdbBackupFrequency":{
         "type":"string",
         "metadata":{
            "description":"Frequency intravels of the backup."
         }
      },
      "vnetName": {
        "type": "string",
        "metadata":{
          "description":"Virtual network name to be deployed"
       }
    },
    "resourceGroup": {
        "type": "string",
        "defaultValue": "redis-rg",
        "metadata":{
          "description":" Resource group where all resources are created"
       }
    },
    "vnetAddressPrefix": {
        "type": "array",
        "defaultValue": [
            "172.25.0.0/16"
        ],
        "metadata":{
          "description":"Virtualnetwork address prefix"
       }
    },
    
    "subnetName": {
        "type": "string",
        "metadata":{
          "description":"Subnet name to be deployed"
       }
    },
    "subnetPrefix": {
        "type": "string",
        "metadata":{
          "description":"Subnet address prefix"
       }
    },
   
    "firewallEnabled": {
        "type": "bool",
        "defaultValue":true,
        "metadata": {
           "description": "Firewall should be enabled on subnet"
        }
    },
    
    "firewallName": {
        "type": "string",
        "metadata":{
          "description":"Firewall name to be deployed in subnet"
       }
    },
    "firewallSubnetAddressSpace": {
        "type": "string",
        "metadata":{
          "description":"Firewall address prefix"
       }
    },
    "publicIpAddress": {
        "type": "string",
        "metadata":{
          "description":"Public Ip address resource name to create"
       }
    }
   },
    "resources": [
        {
            "name": "[parameters('redisCacheName')]",
            "type": "Microsoft.Cache/redisEnterprise",
            "apiVersion": "2021-02-01-preview",
            "properties": {},
            "location": "[parameters('location')]",
            "dependsOn": [],
            "sku": {
                "name": "[parameters('skuname')]",
                "capacity": "[parameters('capacity')]"
            },
            "zones": "[if(equals(length(parameters('zones')), 0), json('null'), parameters('zones'))]",
            "tags": {},
            "resources": [
                {
                    "name": "[concat(parameters('redisCacheName'), '/default')]",
                    "type": "Microsoft.Cache/redisEnterprise/databases",
                    "apiVersion": "2021-02-01-preview",
                    "properties": {
                        "clientProtocol": "Encrypted",
                        "evictionPolicy": "NoEviction",
                        "clusteringPolicy": "EnterpriseCluster",
                        "modules": "[parameters('modules')]",
                        "persistence": {
                            "aofEnabled": false,
                            "rdbEnabled": true,
                            "rdbFrequency": "[parameters('rdbBackupFrequency')]"
                        }
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Cache/redisEnterprise', parameters('redisCacheName'))]"
                    ],
                    "tags": {}
                }
            ]
        },
        {
            "name": "[parameters('vnetName')]",
            "type": "Microsoft.Network/VirtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "tags": {},
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('vnetAddressPrefix')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "privateEndpointNetworkPolicies": "Disabled"
                        }
                    },
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('firewallSubnetAddressSpace')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[parameters('publicIpAddress')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-04-01",
            "name": "[parameters('firewallName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), 'AzureFirewallSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId(parameters('resourceGroup'), 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddress'))]"
                            }
                        }
                    }
                ]
            }
        }
    ]
 } 
